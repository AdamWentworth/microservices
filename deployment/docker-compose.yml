version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    volumes:
      - /home/adam/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partitions:replication factor
      KAFKA_ADVERTISED_HOST_NAME: kafka # Use the service name for internal networking
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/adam/kafka:/kafka/kafka-logs
    depends_on:
      - zookeeper

  db:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'artist_tracker'
      MYSQL_USER: 'adam'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'Padraig#88'
    ports:
      - '3306:3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    image: receiver:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - db

  storage:
    image: storage:latest
    ports:
      - "8090:8090"
    environment:
      MYSQL_USER: 'adam'
      MYSQL_PASSWORD: 'password'
      MYSQL_DATABASE: 'artist_tracker'
      MYSQL_HOSTNAME: 'db' # Use the service name for the DB
    depends_on:
      - db
      - kafka

  processing:
    build:
      context: ../processing
    network_mode: "host"
    depends_on:
      - storage

  audit:
    build:
      context: ../audit
    ports:
      - "8110:8110"
    depends_on:
      - kafka

  dashboard:
    build:
      context: ../dashboard-ui
    ports:
      - "3000:3000"
    depends_on:
      - processing
      - audit

volumes:
  my-db: